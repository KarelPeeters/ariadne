// This file is part of ariadne.
//
// ariadne is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later
// version.
//
// ariadne is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
// PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// ariadne. If not, see <https://www.gnu.org/licenses/>.

#ifndef ASTTraversalvhdl_H_
#define ASTTraversalvhdl_H_

#include "AST.h"

class ASTTraversalvhdl
{
public:
  static AST ast;

  ASTTraversalvhdl() {};
  virtual ~ASTTraversalvhdl() {};
  void traverse();
  void print();

  virtual void design_file(AST & node) {}
  virtual void design_unit_list(AST & node) {}
  virtual void designator(AST & node) {}
  virtual void character_literal(AST & node) {}
  virtual void literal(AST & node) {}
  virtual void enumeration_literal(AST & node) {}
  virtual void physical_literal(AST & node) {}
  virtual void physical_literal_no_default(AST & node) {}
  virtual void idf_list(AST & node) {}
  virtual void design_unit(AST & node) {}
  virtual void context_list(AST & node) {}
  virtual void lib_unit(AST & node) {}
  virtual void context_item(AST & node) {}
  virtual void lib_clause(AST & node) {}
  virtual void use_clause(AST & node) {}
  virtual void use_clause_list(AST & node) {}
  virtual void use_clause_item(AST & node) {}
  virtual void package_selection(AST & node) {}
  virtual void entity_decl(AST & node) {}
  virtual void entity_start(AST & node) {}
  virtual void entity_decl_5(AST & node) {}
  virtual void entity_decl_4(AST & node) {}
  virtual void entity_decl_3(AST & node) {}
  virtual void entity_decl_2(AST & node) {}
  virtual void entity_decl_1(AST & node) {}
  virtual void arch_body(AST & node) {}
  virtual void arch_start(AST & node) {}
  virtual void arch_body_2(AST & node) {}
  virtual void arch_body_1(AST & node) {}
  virtual void config_decl(AST & node) {}
  virtual void config_start(AST & node) {}
  virtual void config_decl_2(AST & node) {}
  virtual void config_decl_1(AST & node) {}
  virtual void config_decl_3(AST & node) {}
  virtual void package_decl(AST & node) {}
  virtual void package_start(AST & node) {}
  virtual void package_decl_2(AST & node) {}
  virtual void package_decl_1(AST & node) {}
  virtual void package_body(AST & node) {}
  virtual void pack_body_start(AST & node) {}
  virtual void package_body_2(AST & node) {}
  virtual void package_body_1(AST & node) {}
  virtual void common_decltve_item(AST & node) {}
  virtual void entity_decltve_item(AST & node) {}
  virtual void block_decltve_item(AST & node) {}
  virtual void package_decltve_item(AST & node) {}
  virtual void package_body_decltve_item(AST & node) {}
  virtual void subprog_decltve_item(AST & node) {}
  virtual void procs_decltve_item(AST & node) {}
  virtual void config_decltve_item(AST & node) {}
  virtual void constant_decl(AST & node) {}
  virtual void constant_decl_1(AST & node) {}
  virtual void signal_decl(AST & node) {}
  virtual void signal_decl_2(AST & node) {}
  virtual void signal_decl_1(AST & node) {}
  virtual void shared_var_decl(AST & node) {}
  virtual void variable_decl(AST & node) {}
  virtual void variable_decl_1(AST & node) {}
  virtual void subprog_decl(AST & node) {}
  virtual void subprog_spec(AST & node) {}
  virtual void subprog_spec_2(AST & node) {}
  virtual void subprog_body(AST & node) {}
  virtual void subprog_body_2(AST & node) {}
  virtual void subprog_body_1(AST & node) {}
  virtual void interf_list(AST & node) {}
  virtual void interf_list_1(AST & node) {}
  virtual void interf_element(AST & node) {}
  virtual void subprog_interf_list(AST & node) {}
  virtual void subprog_interf_list_1(AST & node) {}
  virtual void subprog_interf_element(AST & node) {}
  virtual void interf_element_4(AST & node) {}
  virtual void interf_element_3(AST & node) {}
  virtual void interf_element_2(AST & node) {}
  virtual void interf_element_1(AST & node) {}
  virtual void mode(AST & node) {}
  virtual void association_list(AST & node) {}
  virtual void association_list_1(AST & node) {}
  virtual void association_element(AST & node) {}
  virtual void formal_part(AST & node) {}
  virtual void actual_part(AST & node) {}
  virtual void gen_association_list(AST & node) {}
  virtual void gen_association_list_1(AST & node) {}
  virtual void gen_association_element(AST & node) {}
  virtual void element_association_list(AST & node) {}
  virtual void element_association(AST & node) {}
  virtual void choices(AST & node) {}
  virtual void choice(AST & node) {}
  virtual void mark(AST & node) {}
  virtual void expr(AST & node) {}
  virtual void and_relation(AST & node) {}
  virtual void or_relation(AST & node) {}
  virtual void xor_relation(AST & node) {}
  virtual void xnor_relation(AST & node) {}
  virtual void relation(AST & node) {}
  virtual void primary(AST & node) {}
  virtual void name(AST & node) {}
  virtual void name2(AST & node) {}
  virtual void sel_name(AST & node) {}
  virtual void ifts_name(AST & node) {}
  virtual void attribute_name(AST & node) {}
  virtual void suffix(AST & node) {}
  virtual void aggregate(AST & node) {}
  virtual void qualified_expr(AST & node) {}
  virtual void allocator(AST & node) {}
  virtual void allocator_2(AST & node) {}
  virtual void allocator_1(AST & node) {}
  virtual void type_decl(AST & node) {}
  virtual void type_decl_1(AST & node) {}
  virtual void type_definition(AST & node) {}
  virtual void enumeration_type_definition(AST & node) {}
  virtual void enumeration_type_definition_1(AST & node) {}
  virtual void physical_type_definition(AST & node) {}
  virtual void physical_type_definition_1(AST & node) {}
  virtual void base_unit_decl(AST & node) {}
  virtual void secondary_unit_decl(AST & node) {}
  virtual void unconstrained_array_definition(AST & node) {}
  virtual void unconstrained_array_definition_1(AST & node) {}
  virtual void index_subtype_definition(AST & node) {}
  virtual void constrained_array_definition(AST & node) {}
  virtual void record_type_definition(AST & node) {}
  virtual void record_type_definition_2(AST & node) {}
  virtual void record_type_definition_1(AST & node) {}
  virtual void element_decl(AST & node) {}
  virtual void access_type_definition(AST & node) {}
  virtual void file_type_definition(AST & node) {}
  virtual void subtype_decl(AST & node) {}
  virtual void subtype_indic(AST & node) {}
  virtual void gen_association_list_array(AST & node) {}
  virtual void subtype_indic1(AST & node) {}
  virtual void range_constraint(AST & node) {}
  virtual void index_constraint(AST & node) {}
  virtual void index_constraint_1(AST & node) {}
  virtual void discrete_range(AST & node) {}
  virtual void discrete_range1(AST & node) {}
  virtual void range_spec_discrete(AST & node) {}
  virtual void range_spec(AST & node) {}
  virtual void direction(AST & node) {}
  virtual void object_class(AST & node) {}
  virtual void signal_kind(AST & node) {}
  virtual void alias_decl(AST & node) {}
  virtual void file_decl(AST & node) {}
  virtual void file_decl_common(AST & node) {}
  virtual void file_decl87(AST & node) {}
  virtual void file_decl93(AST & node) {}
  virtual void file_open_info(AST & node) {}
  virtual void file_decl_1(AST & node) {}
  virtual void disconnection_spec(AST & node) {}
  virtual void signal_list(AST & node) {}
  virtual void signal_list_1(AST & node) {}
  virtual void attribute_decl(AST & node) {}
  virtual void attribute_spec(AST & node) {}
  virtual void entity_spec(AST & node) {}
  virtual void entity_name_list(AST & node) {}
  virtual void entity_name_list_1(AST & node) {}
  virtual void entity_class(AST & node) {}
  virtual void generation_scheme(AST & node) {}
  virtual void if_scheme(AST & node) {}
  virtual void for_scheme(AST & node) {}
  virtual void concurrent_stats(AST & node) {}
  virtual void concurrent_stat(AST & node) {}
  virtual void block_stat(AST & node) {}
  virtual void block_stat_5(AST & node) {}
  virtual void block_stat_4(AST & node) {}
  virtual void block_stat_3(AST & node) {}
  virtual void block_stat_7(AST & node) {}
  virtual void block_stat_2(AST & node) {}
  virtual void block_stat_8(AST & node) {}
  virtual void block_stat_1(AST & node) {}
  virtual void comp_inst_stat(AST & node) {}
  virtual void comp_inst_stat_2(AST & node) {}
  virtual void comp_inst_stat_1(AST & node) {}
  virtual void concurrent_assertion_stat(AST & node) {}
  virtual void concurrent_procedure_call(AST & node) {}
  virtual void concurrent_signal_assign_stat(AST & node) {}
  virtual void condal_signal_assign(AST & node) {}
  virtual void condal_wavefrms(AST & node) {}
  virtual void condal_wavefrms_1(AST & node) {}
  virtual void condal_wavefrms_2(AST & node) {}
  virtual void wavefrm(AST & node) {}
  virtual void wavefrm_element(AST & node) {}
  virtual void wavefrm_element_1(AST & node) {}
  virtual void target(AST & node) {}
  virtual void opts(AST & node) {}
  virtual void opts_2(AST & node) {}
  virtual void opts_1(AST & node) {}
  virtual void sel_signal_assign(AST & node) {}
  virtual void sel_wavefrms(AST & node) {}
  virtual void sel_wavefrms_2(AST & node) {}
  virtual void generate_stat(AST & node) {}
  virtual void generate_stat_1(AST & node) {}
  virtual void procs_stat(AST & node) {}
  virtual void procs_stat1(AST & node) {}
  virtual void procs_stat1_4(AST & node) {}
  virtual void procs_stat1_3(AST & node) {}
  virtual void procs_stat1_2(AST & node) {}
  virtual void procs_stat1_1(AST & node) {}
  virtual void sensitivity_list(AST & node) {}
  virtual void seq_stats(AST & node) {}
  virtual void seq_stat(AST & node) {}
  virtual void assertion_stat(AST & node) {}
  virtual void assertion_stat_2(AST & node) {}
  virtual void assertion_stat_1(AST & node) {}
  virtual void case_stat(AST & node) {}
  virtual void case_stat_1(AST & node) {}
  virtual void case_stat_alternative(AST & node) {}
  virtual void exit_stat(AST & node) {}
  virtual void exit_stat_2(AST & node) {}
  virtual void exit_stat_1(AST & node) {}
  virtual void if_stat(AST & node) {}
  virtual void if_stat_2(AST & node) {}
  virtual void if_stat_1(AST & node) {}
  virtual void if_stat_3(AST & node) {}
  virtual void loop_stat(AST & node) {}
  virtual void loop_for(AST & node) {}
  virtual void loop_infinite(AST & node) {}
  virtual void loop_while(AST & node) {}
  virtual void loop_stat_3(AST & node) {}
  virtual void loop_stat_1(AST & node) {}
  virtual void next_stat(AST & node) {}
  virtual void next_stat_2(AST & node) {}
  virtual void next_stat_1(AST & node) {}
  virtual void null_stat(AST & node) {}
  virtual void procedure_call_stat(AST & node) {}
  virtual void return_stat(AST & node) {}
  virtual void return_stat_1(AST & node) {}
  virtual void report_stat(AST & node) {}
  virtual void signal_assign_stat(AST & node) {}
  virtual void signal_assign_stat_1(AST & node) {}
  virtual void variable_assign_stat(AST & node) {}
  virtual void wait_stat(AST & node) {}
  virtual void sensitivity_clause(AST & node) {}
  virtual void condition_clause(AST & node) {}
  virtual void timeout_clause(AST & node) {}
  virtual void comp_decl(AST & node) {}
  virtual void comp_decl_3(AST & node) {}
  virtual void comp_decl_2(AST & node) {}
  virtual void comp_decl_1(AST & node) {}
  virtual void block_config(AST & node) {}
  virtual void subblock_config(AST & node) {}
  virtual void block_config_2(AST & node) {}
  virtual void block_config_1(AST & node) {}
  virtual void block_spec(AST & node) {}
  virtual void block_spec_1(AST & node) {}
  virtual void index_spec(AST & node) {}
  virtual void config_item(AST & node) {}
  virtual void comp_config(AST & node) {}
  virtual void comp_config_2(AST & node) {}
  virtual void comp_config_1(AST & node) {}
  virtual void config_spec(AST & node) {}
  virtual void comp_spec(AST & node) {}
  virtual void inst_list(AST & node) {}
  virtual void binding_indic(AST & node) {}
  virtual void binding_indic_2(AST & node) {}
  virtual void binding_indic_1(AST & node) {}
  virtual void entity_aspect(AST & node) {}
  virtual void entity_aspect_arch_name(AST & node) {}

  virtual void design_file_exit(AST & node) {}
  virtual void design_unit_list_exit(AST & node) {}
  virtual void designator_exit(AST & node) {}
  virtual void character_literal_exit(AST & node) {}
  virtual void literal_exit(AST & node) {}
  virtual void enumeration_literal_exit(AST & node) {}
  virtual void physical_literal_exit(AST & node) {}
  virtual void physical_literal_no_default_exit(AST & node) {}
  virtual void idf_list_exit(AST & node) {}
  virtual void design_unit_exit(AST & node) {}
  virtual void context_list_exit(AST & node) {}
  virtual void lib_unit_exit(AST & node) {}
  virtual void context_item_exit(AST & node) {}
  virtual void lib_clause_exit(AST & node) {}
  virtual void use_clause_exit(AST & node) {}
  virtual void use_clause_list_exit(AST & node) {}
  virtual void use_clause_item_exit(AST & node) {}
  virtual void package_selection_exit(AST & node) {}
  virtual void entity_decl_exit(AST & node) {}
  virtual void entity_start_exit(AST & node) {}
  virtual void entity_decl_5_exit(AST & node) {}
  virtual void entity_decl_4_exit(AST & node) {}
  virtual void entity_decl_3_exit(AST & node) {}
  virtual void entity_decl_2_exit(AST & node) {}
  virtual void entity_decl_1_exit(AST & node) {}
  virtual void arch_body_exit(AST & node) {}
  virtual void arch_start_exit(AST & node) {}
  virtual void arch_body_2_exit(AST & node) {}
  virtual void arch_body_1_exit(AST & node) {}
  virtual void config_decl_exit(AST & node) {}
  virtual void config_start_exit(AST & node) {}
  virtual void config_decl_2_exit(AST & node) {}
  virtual void config_decl_1_exit(AST & node) {}
  virtual void config_decl_3_exit(AST & node) {}
  virtual void package_decl_exit(AST & node) {}
  virtual void package_start_exit(AST & node) {}
  virtual void package_decl_2_exit(AST & node) {}
  virtual void package_decl_1_exit(AST & node) {}
  virtual void package_body_exit(AST & node) {}
  virtual void pack_body_start_exit(AST & node) {}
  virtual void package_body_2_exit(AST & node) {}
  virtual void package_body_1_exit(AST & node) {}
  virtual void common_decltve_item_exit(AST & node) {}
  virtual void entity_decltve_item_exit(AST & node) {}
  virtual void block_decltve_item_exit(AST & node) {}
  virtual void package_decltve_item_exit(AST & node) {}
  virtual void package_body_decltve_item_exit(AST & node) {}
  virtual void subprog_decltve_item_exit(AST & node) {}
  virtual void procs_decltve_item_exit(AST & node) {}
  virtual void config_decltve_item_exit(AST & node) {}
  virtual void constant_decl_exit(AST & node) {}
  virtual void constant_decl_1_exit(AST & node) {}
  virtual void signal_decl_exit(AST & node) {}
  virtual void signal_decl_2_exit(AST & node) {}
  virtual void signal_decl_1_exit(AST & node) {}
  virtual void shared_var_decl_exit(AST & node) {}
  virtual void variable_decl_exit(AST & node) {}
  virtual void variable_decl_1_exit(AST & node) {}
  virtual void subprog_decl_exit(AST & node) {}
  virtual void subprog_spec_exit(AST & node) {}
  virtual void subprog_spec_2_exit(AST & node) {}
  virtual void subprog_body_exit(AST & node) {}
  virtual void subprog_body_2_exit(AST & node) {}
  virtual void subprog_body_1_exit(AST & node) {}
  virtual void interf_list_exit(AST & node) {}
  virtual void interf_list_1_exit(AST & node) {}
  virtual void interf_element_exit(AST & node) {}
  virtual void subprog_interf_list_exit(AST & node) {}
  virtual void subprog_interf_list_1_exit(AST & node) {}
  virtual void subprog_interf_element_exit(AST & node) {}
  virtual void interf_element_4_exit(AST & node) {}
  virtual void interf_element_3_exit(AST & node) {}
  virtual void interf_element_2_exit(AST & node) {}
  virtual void interf_element_1_exit(AST & node) {}
  virtual void mode_exit(AST & node) {}
  virtual void association_list_exit(AST & node) {}
  virtual void association_list_1_exit(AST & node) {}
  virtual void association_element_exit(AST & node) {}
  virtual void formal_part_exit(AST & node) {}
  virtual void actual_part_exit(AST & node) {}
  virtual void gen_association_list_exit(AST & node) {}
  virtual void gen_association_list_1_exit(AST & node) {}
  virtual void gen_association_element_exit(AST & node) {}
  virtual void element_association_list_exit(AST & node) {}
  virtual void element_association_exit(AST & node) {}
  virtual void choices_exit(AST & node) {}
  virtual void choice_exit(AST & node) {}
  virtual void mark_exit(AST & node) {}
  virtual void expr_exit(AST & node) {}
  virtual void and_relation_exit(AST & node) {}
  virtual void or_relation_exit(AST & node) {}
  virtual void xor_relation_exit(AST & node) {}
  virtual void xnor_relation_exit(AST & node) {}
  virtual void relation_exit(AST & node) {}
  virtual void primary_exit(AST & node) {}
  virtual void name_exit(AST & node) {}
  virtual void name2_exit(AST & node) {}
  virtual void sel_name_exit(AST & node) {}
  virtual void ifts_name_exit(AST & node) {}
  virtual void attribute_name_exit(AST & node) {}
  virtual void suffix_exit(AST & node) {}
  virtual void aggregate_exit(AST & node) {}
  virtual void qualified_expr_exit(AST & node) {}
  virtual void allocator_exit(AST & node) {}
  virtual void allocator_2_exit(AST & node) {}
  virtual void allocator_1_exit(AST & node) {}
  virtual void type_decl_exit(AST & node) {}
  virtual void type_decl_1_exit(AST & node) {}
  virtual void type_definition_exit(AST & node) {}
  virtual void enumeration_type_definition_exit(AST & node) {}
  virtual void enumeration_type_definition_1_exit(AST & node) {}
  virtual void physical_type_definition_exit(AST & node) {}
  virtual void physical_type_definition_1_exit(AST & node) {}
  virtual void base_unit_decl_exit(AST & node) {}
  virtual void secondary_unit_decl_exit(AST & node) {}
  virtual void unconstrained_array_definition_exit(AST & node) {}
  virtual void unconstrained_array_definition_1_exit(AST & node) {}
  virtual void index_subtype_definition_exit(AST & node) {}
  virtual void constrained_array_definition_exit(AST & node) {}
  virtual void record_type_definition_exit(AST & node) {}
  virtual void record_type_definition_2_exit(AST & node) {}
  virtual void record_type_definition_1_exit(AST & node) {}
  virtual void element_decl_exit(AST & node) {}
  virtual void access_type_definition_exit(AST & node) {}
  virtual void file_type_definition_exit(AST & node) {}
  virtual void subtype_decl_exit(AST & node) {}
  virtual void subtype_indic_exit(AST & node) {}
  virtual void gen_association_list_array_exit(AST & node) {}
  virtual void subtype_indic1_exit(AST & node) {}
  virtual void range_constraint_exit(AST & node) {}
  virtual void index_constraint_exit(AST & node) {}
  virtual void index_constraint_1_exit(AST & node) {}
  virtual void discrete_range_exit(AST & node) {}
  virtual void discrete_range1_exit(AST & node) {}
  virtual void range_spec_discrete_exit(AST & node) {}
  virtual void range_spec_exit(AST & node) {}
  virtual void direction_exit(AST & node) {}
  virtual void object_class_exit(AST & node) {}
  virtual void signal_kind_exit(AST & node) {}
  virtual void alias_decl_exit(AST & node) {}
  virtual void file_decl_exit(AST & node) {}
  virtual void file_decl_common_exit(AST & node) {}
  virtual void file_decl87_exit(AST & node) {}
  virtual void file_decl93_exit(AST & node) {}
  virtual void file_open_info_exit(AST & node) {}
  virtual void file_decl_1_exit(AST & node) {}
  virtual void disconnection_spec_exit(AST & node) {}
  virtual void signal_list_exit(AST & node) {}
  virtual void signal_list_1_exit(AST & node) {}
  virtual void attribute_decl_exit(AST & node) {}
  virtual void attribute_spec_exit(AST & node) {}
  virtual void entity_spec_exit(AST & node) {}
  virtual void entity_name_list_exit(AST & node) {}
  virtual void entity_name_list_1_exit(AST & node) {}
  virtual void entity_class_exit(AST & node) {}
  virtual void generation_scheme_exit(AST & node) {}
  virtual void if_scheme_exit(AST & node) {}
  virtual void for_scheme_exit(AST & node) {}
  virtual void concurrent_stats_exit(AST & node) {}
  virtual void concurrent_stat_exit(AST & node) {}
  virtual void block_stat_exit(AST & node) {}
  virtual void block_stat_5_exit(AST & node) {}
  virtual void block_stat_4_exit(AST & node) {}
  virtual void block_stat_3_exit(AST & node) {}
  virtual void block_stat_7_exit(AST & node) {}
  virtual void block_stat_2_exit(AST & node) {}
  virtual void block_stat_8_exit(AST & node) {}
  virtual void block_stat_1_exit(AST & node) {}
  virtual void comp_inst_stat_exit(AST & node) {}
  virtual void comp_inst_stat_2_exit(AST & node) {}
  virtual void comp_inst_stat_1_exit(AST & node) {}
  virtual void concurrent_assertion_stat_exit(AST & node) {}
  virtual void concurrent_procedure_call_exit(AST & node) {}
  virtual void concurrent_signal_assign_stat_exit(AST & node) {}
  virtual void condal_signal_assign_exit(AST & node) {}
  virtual void condal_wavefrms_exit(AST & node) {}
  virtual void condal_wavefrms_1_exit(AST & node) {}
  virtual void condal_wavefrms_2_exit(AST & node) {}
  virtual void wavefrm_exit(AST & node) {}
  virtual void wavefrm_element_exit(AST & node) {}
  virtual void wavefrm_element_1_exit(AST & node) {}
  virtual void target_exit(AST & node) {}
  virtual void opts_exit(AST & node) {}
  virtual void opts_2_exit(AST & node) {}
  virtual void opts_1_exit(AST & node) {}
  virtual void sel_signal_assign_exit(AST & node) {}
  virtual void sel_wavefrms_exit(AST & node) {}
  virtual void sel_wavefrms_2_exit(AST & node) {}
  virtual void generate_stat_exit(AST & node) {}
  virtual void generate_stat_1_exit(AST & node) {}
  virtual void procs_stat_exit(AST & node) {}
  virtual void procs_stat1_exit(AST & node) {}
  virtual void procs_stat1_4_exit(AST & node) {}
  virtual void procs_stat1_3_exit(AST & node) {}
  virtual void procs_stat1_2_exit(AST & node) {}
  virtual void procs_stat1_1_exit(AST & node) {}
  virtual void sensitivity_list_exit(AST & node) {}
  virtual void seq_stats_exit(AST & node) {}
  virtual void seq_stat_exit(AST & node) {}
  virtual void assertion_stat_exit(AST & node) {}
  virtual void assertion_stat_2_exit(AST & node) {}
  virtual void assertion_stat_1_exit(AST & node) {}
  virtual void case_stat_exit(AST & node) {}
  virtual void case_stat_1_exit(AST & node) {}
  virtual void case_stat_alternative_exit(AST & node) {}
  virtual void exit_stat_exit(AST & node) {}
  virtual void exit_stat_2_exit(AST & node) {}
  virtual void exit_stat_1_exit(AST & node) {}
  virtual void if_stat_exit(AST & node) {}
  virtual void if_stat_2_exit(AST & node) {}
  virtual void if_stat_1_exit(AST & node) {}
  virtual void if_stat_3_exit(AST & node) {}
  virtual void loop_stat_exit(AST & node) {}
  virtual void loop_for_exit(AST & node) {}
  virtual void loop_infinite_exit(AST & node) {}
  virtual void loop_while_exit(AST & node) {}
  virtual void loop_stat_3_exit(AST & node) {}
  virtual void loop_stat_1_exit(AST & node) {}
  virtual void next_stat_exit(AST & node) {}
  virtual void next_stat_2_exit(AST & node) {}
  virtual void next_stat_1_exit(AST & node) {}
  virtual void null_stat_exit(AST & node) {}
  virtual void procedure_call_stat_exit(AST & node) {}
  virtual void return_stat_exit(AST & node) {}
  virtual void return_stat_1_exit(AST & node) {}
  virtual void report_stat_exit(AST & node) {}
  virtual void signal_assign_stat_exit(AST & node) {}
  virtual void signal_assign_stat_1_exit(AST & node) {}
  virtual void variable_assign_stat_exit(AST & node) {}
  virtual void wait_stat_exit(AST & node) {}
  virtual void sensitivity_clause_exit(AST & node) {}
  virtual void condition_clause_exit(AST & node) {}
  virtual void timeout_clause_exit(AST & node) {}
  virtual void comp_decl_exit(AST & node) {}
  virtual void comp_decl_3_exit(AST & node) {}
  virtual void comp_decl_2_exit(AST & node) {}
  virtual void comp_decl_1_exit(AST & node) {}
  virtual void block_config_exit(AST & node) {}
  virtual void subblock_config_exit(AST & node) {}
  virtual void block_config_2_exit(AST & node) {}
  virtual void block_config_1_exit(AST & node) {}
  virtual void block_spec_exit(AST & node) {}
  virtual void block_spec_1_exit(AST & node) {}
  virtual void index_spec_exit(AST & node) {}
  virtual void config_item_exit(AST & node) {}
  virtual void comp_config_exit(AST & node) {}
  virtual void comp_config_2_exit(AST & node) {}
  virtual void comp_config_1_exit(AST & node) {}
  virtual void config_spec_exit(AST & node) {}
  virtual void comp_spec_exit(AST & node) {}
  virtual void inst_list_exit(AST & node) {}
  virtual void binding_indic_exit(AST & node) {}
  virtual void binding_indic_2_exit(AST & node) {}
  virtual void binding_indic_1_exit(AST & node) {}
  virtual void entity_aspect_exit(AST & node) {}
  virtual void entity_aspect_arch_name_exit(AST & node) {}

protected:
  void traverse_(AST & node);
  void print_(AST & node, unsigned int indent);

};

#endif
