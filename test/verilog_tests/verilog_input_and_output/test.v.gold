// This file is part of ariadne.
//
// ariadne is free software: you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later
// version.
//
// ariadne is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
// PARTICULAR PURPOSE. See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with
// ariadne. If not, see <https://www.gnu.org/licenses/>.

// EASICS generated file
// command : ariadne test.ari
// tool_version : 1.4.13
// input : test.ari
// input : a.v
// input : pushPullFifoOut.v

module test
  #(
    parameter extraFifoDepth = 0,
    parameter numInterfaces = 1,
    parameter noInputRegs = 0
  )
  (
   input mclk,
   input readRun_r,
   input [numInterfaces-1:0] enable_r,
   input dataValidFromParent,
   input [(32)-1:0] dataFromParent,
   input [numInterfaces-1:0] reqFromNext,
   output dataXferToParent,
   output readyToParent,
   output [numInterfaces-1:0] xferToNext,
   output [numInterfaces*(32)-1:0] dataToNext,
   output [numInterfaces-1:0] counterError
  );


wire c;


  a a_1
    (
     .clk(c)
    );
  pushPullFifoOut
    #(
      .extraFifoDepth(extraFifoDepth),
      .noInputRegs(noInputRegs),
      .numInterfaces(numInterfaces),
      .dataWidth(32)
    )
  b_1
    (
     .counterError(counterError),
     .dataFromParent(dataFromParent),
     .dataToNext(dataToNext),
     .dataValidFromParent(dataValidFromParent),
     .dataXferToParent(dataXferToParent),
     .enable_r(enable_r),
     .mclk(mclk),
     .readRun_r(readRun_r),
     .readyToParent(readyToParent),
     .reqFromNext(reqFromNext),
     .xferToNext(xferToNext),
     .clearErrors_r(1'b0)
    );


endmodule
